// client/src/features/book/useCreateBook.ts

import { useMutation, useQueryClient } from '@tanstack/react-query';
import { useNavigate } from 'react-router-dom';
import { createBook } from './api.book';
import type { CreateBookInput } from './types';

/**
 * Custom hook ƒë·ªÉ x·ª≠ l√Ω logic t·∫°o s√°ch m·ªõi.
 * Bao g·ªìm vi·ªác g·ªçi API, v√† x·ª≠ l√Ω sau khi th√†nh c√¥ng ho·∫∑c th·∫•t b·∫°i.
 * @returns {object} Tr·∫£ v·ªÅ mutation object t·ª´ React Query.
 */
export const useCreateBook = () => {
  const queryClient = useQueryClient();
  const navigate = useNavigate();

  return useMutation({
    // mutationFn ch·ªâ ƒë·ªãnh h√†m s·∫Ω ƒë∆∞·ª£c g·ªçi khi th·ª±c thi mutation.
    // React Query s·∫Ω t·ª± ƒë·ªông truy·ªÅn c√°c bi·∫øn t·ª´ h√†m `mutate` v√†o ƒë√¢y.
    mutationFn: (bookData: CreateBookInput) => createBook(bookData),

    /**
     * onSuccess ƒë∆∞·ª£c g·ªçi khi mutation th√†nh c√¥ng.
     */
    onSuccess: () => {
      // üí° Pro-tip: ƒê√¢y l√† "ph√©p thu·∫≠t" c·ªßa React Query.
      // `invalidateQueries` b√°o cho React Query r·∫±ng d·ªØ li·ªáu thu·ªôc v·ªÅ queryKey 'books'
      // ƒë√£ c≈© (stale) v√† c·∫ßn ƒë∆∞·ª£c fetch l·∫°i v√†o l·∫ßn t·ªõi khi n√≥ ƒë∆∞·ª£c y√™u c·∫ßu.
      // ƒêi·ªÅu n√†y ƒë·∫£m b·∫£o danh s√°ch s√°ch ·ªü trang ManageBooksPage lu√¥n ƒë∆∞·ª£c c·∫≠p nh·∫≠t.
      queryClient.invalidateQueries({ queryKey: ['books'] });

      // TODO: Thay th·∫ø alert b·∫±ng m·ªôt h·ªá th·ªëng th√¥ng b√°o "x·ªãn" h∆°n (toast/snackbar)
      console.log('S√°ch ƒë√£ ƒë∆∞·ª£c t·∫°o th√†nh c√¥ng!');
      
      // ƒêi·ªÅu h∆∞·ªõng ng∆∞·ªùi d√πng v·ªÅ trang qu·∫£n l√Ω s√°ch sau khi th√†nh c√¥ng.
      navigate('/dashboard/admin/manage-books');
    },

    /**
     * onError ƒë∆∞·ª£c g·ªçi khi mutation th·∫•t b·∫°i.
     * @param {Error} error - ƒê·ªëi t∆∞·ª£ng l·ªói tr·∫£ v·ªÅ.
     */
    onError: (error: Error) => {
      // Log l·ªói chi ti·∫øt cho dev.
      console.error('L·ªói khi t·∫°o s√°ch:', error);
      
      // TODO: Hi·ªÉn th·ªã th√¥ng b√°o l·ªói th√¢n thi·ªán cho ng∆∞·ªùi d√πng.
      // V√≠ d·ª•: showErrorToast(error.message);
    },
  });
};