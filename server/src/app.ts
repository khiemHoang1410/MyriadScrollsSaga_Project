// server/src/app.ts
import express, { Application, Request, Response } from 'express';
import dotenv from 'dotenv'; // ƒê·∫£m b·∫£o dotenv ƒë∆∞·ª£c g·ªçi s·ªõm n·∫øu ch∆∞a c√≥ ·ªü ƒë√¢u kh√°c
dotenv.config(); // G·ªçi ·ªü ƒë√¢y ho·∫∑c ·ªü server.ts tr∆∞·ªõc khi import app

import { connectDB, httpLogger, logger } from '@/config'; // S·ª≠ d·ª•ng barrel file
import { errorHandler, validateResource } from '@/middleware'; // S·ª≠ d·ª•ng barrel file

// Import routes 

import { genreModule, tagModule, languageModule,authModule, userModule, bookModule } from '@/modules';
import TempTestModel from '@/modules/tempTest/tempTest.model'; 


const app: Application = express();
connectDB();
app.use(httpLogger);

// Middlewares ƒë·ªÉ parse JSON v√† URL-encoded data t·ª´ request body
app.use(express.json());
app.use(express.urlencoded({ extended: true }));

// API Routes
app.use('/api/auth', authModule.authRoutes); 
app.use('/api/users', userModule.userRoutes); 
app.use('/api/genres', genreModule.genreRoutes);
app.use('/api/genres', genreModule.genreRoutes);
app.use('/api/tags',tagModule.tagRoutes)
app.use('/api/languages', languageModule.languageRoutes);
app.use('/api/books', bookModule.bookRoutes); // << TH√äM D√íNG N√ÄY


// Route test c∆° b·∫£n
app.get('/', (req: Request, res: Response) => {
  res.send('Hello from Myriad Scrolls Saga Backend App! üìú (DB Connection Attempted!)');
});

// Global error handler (ph·∫£i ƒë·∫∑t SAU t·∫•t c·∫£ c√°c routes v√† middlewares kh√°c)
app.use(errorHandler);

export default app;